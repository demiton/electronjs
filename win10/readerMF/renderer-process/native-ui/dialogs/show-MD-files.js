var $ = require('jquery');

const {ipcRenderer} = require('electron')

ipcRenderer.on('available-file', (event, list) => {
  document.getElementById('available-file').textContent = `Fichiers disponibles : `
  console.log('list size: '+list.length);
  if(list.length>0){
    for(var i in list){
      var node = document.createElement("button");
      node.className='item roundedCorner nav-button';
      node.setAttribute('id','select-file-'+i);
      var textnode = document.createTextNode(list[i]);
        node.appendChild(textnode);
        document.getElementById("available-file").appendChild(node);
    }

  }
    else{
      var node = document.createElement("LI");
      var textnode = document.createTextNode('Aucun Fichiers');
        node.appendChild(textnode);
        document.getElementById('available-file').appendChild(node);
    }
});

ipcRenderer.on('chosen-file', (event, content) => {
  document.getElementById('chosen-file').textContent = content

});

ipcRenderer.on('edited-file', (event, content) => {
  document.getElementById('edited-file').textContent = content

});

$(document).ready(function() {
    $('#summernoteForm')
      /*  .formValidation({
            framework: 'bootstrap',
            excluded: [':disabled'],
            icon: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                title: {
                    validators: {
                        notEmpty: {
                            message: 'The title is required and cannot be empty'
                        }
                    }
                },
                content: {
                    validators: {
                        callback: {
                            message: 'The content is required and cannot be empty',
                            callback: function(value, validator, $field) {
                                var code = $('[name="content"]').summernote('code');
                                // <p><br></p> is code generated by Summernote for empty content
                                return (code !== '' && code !== '<p><br></p>');
                            }
                        }
                    }
                }
            }
        })*/
        .find('[name="content"]')
            .summernote({
                height: 400
            })
            .on('summernote.change', function(customEvent, contents, $editable) {
                // Revalidate the content when its value is changed by Summernote
                $('#summernoteForm').formValidation('revalidateField', 'content');
            })
            .end();
});
//var glob = require('glob');
//console.log('test');
// some options
/*
options = {
    cwd: 'node_modules'
},
*/
// for Files
//forFiles = function(err,files){ console.log(files);};

// glob it.
//glob('**/*.md', options, forFiles);




//  const files = glob.sync(path.join(__dirname, 'main-process/**/*.js'))
//  files.forEach((file) => { require(file) })
